#include <iostream>
#include<stack>
#include<queue>
using namespace std;

void reverseQueue(queue<int>&q,stack<int>&s)
{
    
     // base condition 
      if(q.empty())
      {
        return;
      }

     // ek case solve
       s.push(q.front());
       q.pop();

     // revcursive call
      reverseQueue(q,s);

      // back tracking
        
      q.push(s.top());
      s.pop();

}

int main() {
  cout << "Hello world!" << endl;
    
    stack<int>s;
    queue<int>q;
    q.push(10);
    q.push(20);
    q.push(35);
    q.push(40);
    q.push(60);    

    reverseQueue(q,s);
    
    cout<<"print the element of the queue  :  ";

    while(!q.empty())
    {
      cout<<q.front()<<" ";
      q.pop();
    }
    

  return 0;
}
